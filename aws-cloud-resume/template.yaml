AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-cloud-resume

  Sample SAM Template for aws-cloud-resume

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Tracing: Active
  Api:
    TracingEnabled: True

Parameters:

  DomainName:
    Type: String
    Default: "jhtresume.com"

  HostedZone:
    Type: String
    Default: "Z06411943Q29DQ2SOFRLO"

Resources:

  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
        AccessControl: PublicRead
        WebsiteConfiguration:
            IndexDocument: index.html
        BucketName: jt0524-fantastic-website
  
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyWebsite
                - /*
      Bucket: !Ref MyWebsite
  
  MyRoute53Record: 
    Properties: 
      Comment: "Creating a record set for resume site"
      HostedZoneId: !Ref HostedZone
      RecordSets: 
        - 
          AliasTarget: 
            DNSName: !GetAtt MyDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2
          Name: !Ref DomainName
          Type: A
    Type: "AWS::Route53::RecordSetGroup"

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZone

  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          TargetOriginId: jt0524-fantastic-website.s3-website-us-east-1.amazonaws.com
          ViewerProtocolPolicy: allow-all
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: jt0524-fantastic-website.s3-website-us-east-1.amazonaws.com
            Id: jt0524-fantastic-website.s3-website-us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: true
        DefaultRootObject: index.html

  CountFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: count/
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        Count:
          Type: Api 
          Properties:
            Path: /count
            Method: get
      Policies:
        - AmazonDynamoDBFullAccess

  DynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions: 
        - 
          AttributeName: "id"
          AttributeType: "S"
      TableName: "cloud-resume-challenge"
      KeySchema: 
        - 
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

